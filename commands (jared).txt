date:
ACCESSING
[0.01]
.
[0.01]
Tuesday, May 23rd, 2007.

;

shutdown:

Killing All Systems
[kill]
[10.0]
System Shutdown Complete

;

check:

AWAITING YOUR INSTRUCTION
[input]
[counter]
[24.0]
[100.0]
[1.5]
YEAH GREAT

;


prepaccelsequence:
COMMENCING SYSTEM CHECK
.
..
...
....
PROBING MAGNETIC LENSES
.
LENSE a1 NOMINAL
.
LENSE a2 NOMINAL
.
LENSE a3 NOMINAL
.
LENSE a4 NOMINAL
.
LENSE b5 NOMINAL
.
LENSE b6 NOMINAL
.
LENSE b7 NOMINAL
.
LENSE b8 NOMINAL
.
LENSE b9 NOMINAL
.
LENSE c10 NOMINAL
.
LENSE c11 NOMINAL
.
LENSE d12 NOMINAL
.
LENSE d13 NOMINAL
.
LENSE d14 NOMINAL
.
LENSE d15 NOMINAL
.
LENSE d16 NOMINAL
.
ALL LENSES FUNCTIONING WITHIN SPECIFIED PARAMETERS
.
PROCEDING
.
..
...
....
PROBING COLLISION CHAMBER
.
SENSOR BLOCK A NOMINAL
.
SENSOR BLOCK B NOMINAL
.
SENSOR BLOCK C NOMINAL
.
SENSOR BLOCK D NOMINAL
.
SENSOR BLOCK E NOMINAL
.
ALL SENSORS FUNCTIONING WITHIN SPECIFIED 
PARAMETERS
.
..
...
....
ACCEPTING INPUTs
.
INCIDENT PARTICLE:
[1.0]
holding for input
[0.1]
INCIDENT PARTICLE = PROTON = p
COMPOSITION = uud
CHARGE = 1
SPIN = 1/2
REST MASS = 938 MeV
[1.0]
INPUT CHAMBER AWAITING PROTIUM INPUT
[5.0]
PROTIUM DETECTED
[0.1]
pressure gauge increases
.
[5.0]
NOMINAL PRESSURE REACHED
[0.1]
IONIZE: Y/N
[0.1]
AWAITING INPUT
[1.0]
Beginning Experiment Sequence
[1.0]
Experiment Commencing
[start]

;

stop:
Ending Experiment Sequence
[stop]

;

debug:
##---------------------
## MATH UTILITY FUNCTIONS
##---------------------

def bound(value, low, high):
    "Bound a value between low and high"
    if value < low:
        return low
    elif value > high:
        return high
    else:
        return value

def powerset(items):
    "Create the powerset of a set of items"
    result = {}
    while len(items) > 0:
        curr = items{0}
        for i in items{1:}:
            if not i == curr:
                result.append((curr, i))
        items = {i for i in items if not i == curr}
    return result

;

